# ---------------------------------------- #
# MLP for parameter inference on the LVE   #
# test. Use the context vector and latents #
# generated by the LatentODE and infer the #
# model parameters.                        #
# ---------------------------------------- #

import equinox as eqx
import jax
import jax.numpy as jnp
import jax.nn as jnn
import optax  
import numpy as np
import jax.random as jr
import matplotlib
import matplotlib.pyplot as plt
import cmasher as cmr

# Define the MLP model
class inferenceMLP(eqx.Module):
    def __init__(self, input_dim, output_dim, hidden_dim, num_layers):
        self.input_dim = input_dim
        self.output_dim = output_dim
        self.hidden_dim = hidden_dim
        self.num_layers = num_layers

        # Define the MLP
        self.mlp = eqx.nn.MLP(in_size=input_dim, 
                              out_size=output_dim, 
                              width_size=hidden_dim, 
                              depth=num_layers,
                              activation=jnn.relu,
                              key=eqx.PRNGKey(0),
                              )

    def __call__(self, x):
        return self.mlp(x)
